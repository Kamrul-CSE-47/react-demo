{"version":3,"sources":["Components/Country.js","Components/Countries.js","App.js","reportWebVitals.js","index.js"],"names":["country","props","console","log","name","className","common","src","flag","alt","capital","population","Countries","useState","countries","setCountries","useEffect","fetch","then","res","json","data","length","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAgBeA,EAbC,SAACC,GAGb,OADAC,QAAQC,IAAI,OAAOF,EAAMG,MAErB,sBAAKC,UAAU,UAAf,UACI,2CAAcJ,EAAMG,KAAKE,UACzB,qBAAKC,IAAKN,EAAMO,KAAMC,IAAI,KAC1B,6CAAgBR,EAAMS,QAAtB,iBAA6CT,EAAMG,KAAKO,kBC0BrDC,G,MA9BG,WACd,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAOA,OALAC,qBAAU,WACNC,MAAM,oCACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIN,EAAaM,QAC5B,IAEC,gCACI,wDAA2BP,EAAUQ,UAEjCR,EAAUS,KAAI,SAAAvB,GAAO,OAAIE,QAAQC,IAAI,OAAOH,EAAQQ,SAExD,qBAAKH,UAAU,sBAAf,SAEIS,EAAUS,KAAI,SAAAvB,GAAO,OAAI,cAAC,EAAD,CACrBI,KAAMJ,EAAQI,KACbM,QAASV,EAAQU,QAChBC,WAAYX,EAAQW,WACpBH,KAAMR,EAAQQ,MACTR,EAAQU,mBCfpBc,MARf,WACE,OACE,qBAAKnB,UAAU,MAAf,SACI,cAAC,EAAD,OCKOoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b6a0beb0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Country.css'\r\n\r\nconst country = (props) => {\r\n    // const [] =\r\n    console.log('pop:',props.name);\r\n    return (\r\n        <div className=\"country\">\r\n            <h2>This is: {props.name.common}</h2>\r\n            <img src={props.flag} alt=\"\" />\r\n            <p>Capital is: {props.capital}  Population: {props.name.population}</p>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default country;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Country from './Country';\r\nimport './Countries.css';\r\n\r\n\r\n\r\nconst Countries = () => {\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        fetch('https://restcountries.com/v3/all')\r\n        .then(res => res.json())\r\n        .then(data => setCountries(data))\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <h1>Gello form Countries: {countries.length}</h1>\r\n           { \r\n                countries.map(country => console.log('coun',country.flag))\r\n            }\r\n            <div className=\"countries-container\">\r\n            {\r\n                countries.map(country => <Country \r\n                    name={country.name}\r\n                     capital={country.capital}\r\n                      population={country.population}\r\n                      flag={country.flag}\r\n                      key={country.capital}\r\n                      ></Country>)\r\n            }\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Countries;","\nimport './App.css';\nimport Countries from './Components/Countries';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Countries></Countries>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}